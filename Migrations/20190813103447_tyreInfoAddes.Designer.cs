// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebRentManager.Models;

namespace WebRentManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190813103447_tyreInfoAddes")]
    partial class tyreInfoAddes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebRentManager.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<int>("ProductionYear");

                    b.Property<string>("RegistrationNumber");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WebRentManager.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CarId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Milage");

                    b.Property<Guid>("ServiceFacilityId");

                    b.Property<int>("ServiceType");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ServiceFacilityId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("WebRentManager.Models.ServiceFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("ServiceFacilities");
                });

            modelBuilder.Entity("WebRentManager.Models.TyreInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CarId");

                    b.Property<int>("Diameter");

                    b.Property<int>("Dot");

                    b.Property<int>("Profile");

                    b.Property<string>("SpeedIndex");

                    b.Property<string>("TyreName");

                    b.Property<Guid>("TyreShopId");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("TyreShopId");

                    b.ToTable("TyreInfos");
                });

            modelBuilder.Entity("WebRentManager.Models.TyreShop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("SaturdayHours");

                    b.Property<string>("Street");

                    b.Property<string>("SundayHours");

                    b.Property<string>("WeekHours");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("TyreShops");
                });

            modelBuilder.Entity("WebRentManager.Models.Service", b =>
                {
                    b.HasOne("WebRentManager.Models.Car", "Car")
                        .WithMany("Services")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebRentManager.Models.ServiceFacility", "ServiceFacility")
                        .WithMany()
                        .HasForeignKey("ServiceFacilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebRentManager.Models.TyreInfo", b =>
                {
                    b.HasOne("WebRentManager.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebRentManager.Models.TyreShop", "TyreShop")
                        .WithMany()
                        .HasForeignKey("TyreShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
